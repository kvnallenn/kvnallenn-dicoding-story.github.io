(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))t(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&t(n)}).observe(document,{childList:!0,subtree:!0});function o(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function t(i){if(i.ep)return;i.ep=!0;const s=o(i);fetch(i.href,s)}})();class P{static async login(e,o){try{const t=await fetch("https://story-api.dicoding.dev/v1/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:o})}),i=await t.json();if(!t.ok)throw new Error(i.message||"Invalid email or password");return i}catch(t){return console.error("Login failed in Model:",t.message),{error:!0,message:t.message||"Login failed due to an unexpected error."}}}static async register(e,o,t){try{const i=await fetch("https://story-api.dicoding.dev/v1/register",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e,email:o,password:t})}),s=await i.json();if(!i.ok)throw new Error(s.message||"Registration failed. Please check your input.");return s}catch(i){return console.error("Registration failed in Model:",i.message),{error:!0,message:i.message||"Registration failed due to an unexpected error."}}}}class x{constructor(){this.loginButton=document.querySelector(".login-button"),this.textkonfirmasiLogin=document.querySelector(".text-konfirmasi"),this.registerButton=document.querySelector(".register-button"),this.textkonfirmasiRegister=document.querySelector(".notif-regis")}bindLoginForm(e){const o=document.querySelector(".login-input-form");o&&o.addEventListener("submit",function(t){t.preventDefault();const i=document.querySelector("#email").value,s=document.querySelector("#password").value;e(i,s)})}bindRegisterForm(e){const o=document.querySelector(".register-input-form");o&&o.addEventListener("submit",function(t){t.preventDefault();const i=document.querySelector("#name").value,s=document.querySelector("#email").value,n=document.querySelector("#password").value;e(i,s,n)})}showConfirmation(e="register"){e==="register"&&this.textkonfirmasiRegister&&this.registerButton?(this.textkonfirmasiRegister.style.display="block",this.registerButton.style.display="none"):e==="login"&&this.textkonfirmasiLogin&&(this.textkonfirmasiLogin.style.display="block")}hideConfirmation(e="register"){e==="register"&&this.textkonfirmasiRegister&&this.registerButton?(this.textkonfirmasiRegister.style.display="none",this.registerButton.style.display="inline-block"):e==="login"&&this.textkonfirmasiLogin&&(this.textkonfirmasiLogin.style.display="none")}redirectToLogin(){location.replace("#/login")}redirectToApp(){location.replace("/index.html")}}class C{constructor(e,o){this.view=e,this.model=o,this.view.bindLoginForm(this.handleLogin.bind(this)),this.view.bindRegisterForm(this.handleRegister.bind(this))}async handleLogin(e,o){this.view.showConfirmation("login");try{const t=await this.model.login(e,o);if(t&&!t.error&&t.loginResult&&t.loginResult.token)localStorage.setItem("token",t.loginResult.token),this.view.redirectToApp();else{const i=t&&t.message?t.message:"Unknown login error. Please check your credentials.";console.error("Login failed in Presenter:",i)}}catch(t){console.error("Critical error during login:",t)}finally{this.view.hideConfirmation("login")}}async handleRegister(e,o,t){this.view.showConfirmation("register");try{const i=await this.model.register(e,o,t);if(i&&!i.error)this.view.redirectToLogin();else{const s=i&&i.message?i.message:"Unknown registration error. Please try again.";console.error("Error registering in Presenter:",s)}}catch(i){console.error("Critical error during registration:",i)}finally{this.view.hideConfirmation("register")}}}const A="story-app-db",F=1,c="stories";function b(){return new Promise((r,e)=>{if(!("indexedDB"in window))return console.warn("IndexedDB not supported!"),e("IndexedDB not supported!");const o=indexedDB.open(A,F);o.onupgradeneeded=t=>{const i=t.target.result;i.objectStoreNames.contains(c)||(i.createObjectStore(c,{keyPath:"id"}),console.log('Object store "stories" created.'))},o.onsuccess=t=>{console.log("Database opened successfully."),r(t.target.result)},o.onerror=t=>{console.error("IndexedDB error:",t.target.error),e(t.target.error)}})}async function U(r){if(!r||!r.id)return console.error("Invalid story object or missing story ID for saving."),!1;try{const o=(await b()).transaction(c,"readwrite");return o.objectStore(c).put(r),new Promise((i,s)=>{o.oncomplete=()=>{console.log(`Story ID ${r.id} saved/updated in IndexedDB.`),i(!0)},o.onerror=n=>{console.error(`Error saving story ID ${r.id} to IndexedDB:`,n.target.error),s(n.target.error)}})}catch(e){return console.error("Failed to open DB for saving single story:",e),!1}}async function N(r){if(!r)return console.error("Invalid story ID for deletion."),!1;try{const o=(await b()).transaction(c,"readwrite");return o.objectStore(c).delete(r),new Promise((i,s)=>{o.oncomplete=()=>{console.log(`Story ID ${r} deleted from IndexedDB.`),i(!0)},o.onerror=n=>{console.error(`Error deleting story ID ${r} from IndexedDB:`,n.target.error),s(n.target.error)}})}catch(e){return console.error("Failed to open DB for deleting single story:",e),!1}}async function B(r){if(!r)return!1;try{const t=(await b()).transaction(c,"readonly").objectStore(c);return new Promise((i,s)=>{const n=t.get(r);n.onsuccess=a=>{i(!!a.target.result)},n.onerror=a=>{console.error(`Error checking if story ID ${r} is saved:`,a.target.error),s(a.target.error)}})}catch(e){return console.error("Failed to open DB for checking story:",e),!1}}async function O(r,e){return e?await U(r):await N(r.id)}async function w(){try{const o=(await b()).transaction(c,"readonly").objectStore(c);return new Promise((t,i)=>{const s=o.getAll();s.onsuccess=n=>{t(n.target.result||[])},s.onerror=n=>{console.error("Error getting stories from IndexedDB:",n.target.error),i(n.target.error)}})}catch(r){return console.error("Failed to open DB for reading stories:",r),[]}}async function q(){try{const o=(await b()).transaction(c,"readwrite").objectStore(c);return new Promise((t,i)=>{const s=o.clear();s.onsuccess=()=>{console.log("All stories cleared from IndexedDB."),t(!0)},s.onerror=n=>{console.error("Error clearing stories from IndexedDB:",n.target.error),i(n.target.error)}})}catch(r){return console.error("Failed to open DB for clearing stories:",r),!1}}class g{static getToken(){return localStorage.getItem("token")}static hasActiveSession(){return!!this.getToken()}static async getOfflineStories(){return console.log("Mengambil cerita langsung dari IndexedDB..."),await w()}static async addStory(e){const o=this.getToken();if(!o)return console.error("Error adding story: Token not found."),{error:!0,message:"Unauthorized. Please login first."};if(!navigator.onLine)return{error:!0,message:"Anda sedang offline. Tidak dapat menambahkan cerita baru."};try{return await(await fetch("https://story-api.dicoding.dev/v1/stories",{method:"POST",headers:{Authorization:`Bearer ${o}`},body:e})).json()}catch(t){return console.error("Error adding story:",t),{error:!0,message:t.message}}}static async getStories(){const e=this.getToken();if(!e)return console.error("Failed to fetch stories: Token not found."),{error:!0,message:"Token not found. Please login.",listStory:[]};if(navigator.onLine)try{console.log("Attempting to fetch stories from API...");const t=await(await fetch("https://story-api.dicoding.dev/v1/stories",{method:"GET",headers:{Authorization:`Bearer ${e}`}})).json();return!t.error&&t.listStory?(console.log("Stories fetched from API successfully."),t):(console.warn("API returned error or no stories, trying IndexedDB.",t.message),{error:!1,message:"Fetched from local DB (API error).",listStory:await w()})}catch(o){return console.error("Failed to fetch stories from API, trying IndexedDB:",o),{error:!1,message:"Fetched from local DB (network error).",listStory:await w()}}else{console.log("Offline, fetching stories from IndexedDB...");const o=await w();return o.length>0?{error:!1,message:"Fetched from local DB (offline).",listStory:o}:{error:!0,message:"Offline and no local data available.",listStory:[]}}}static async clearLocalStories(){return await q()}static async subscribeToNotifications(e){const o=this.getToken();if(!o)return{error:!0,message:"Unauthorized. Please login first to subscribe."};if(!navigator.onLine)return{error:!0,message:"Anda sedang offline. Tidak dapat subscribe notifikasi."};const t=e.toJSON(),i={endpoint:t.endpoint,keys:{p256dh:t.keys.p256dh,auth:t.keys.auth}};try{const s=await fetch("https://story-api.dicoding.dev/v1/notifications/subscribe",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify(i)}),n=await s.json();if(!s.ok){const a=n.message||`HTTP error! Status: ${s.status}`;return console.error("Subscription to server failed:",a,n),{error:!0,message:a,details:n}}return console.log("Subscription successful on server:",n),n}catch(s){return console.error("Error subscribing to notifications on server:",s),{error:!0,message:s.message||"Network error or invalid JSON response during subscription."}}}static async unsubscribeFromNotifications(e){const o=this.getToken();if(!o)return{error:!0,message:"Unauthorized. Please login first to unsubscribe."};if(!navigator.onLine)return{error:!0,message:"Anda sedang offline. Tidak dapat unsubscribe notifikasi."};try{const t=await fetch("https://story-api.dicoding.dev/v1/notifications/subscribe",{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify({endpoint:e})}),i=await t.json();if(!t.ok){const s=i.message||`HTTP error! Status: ${t.status}`;return console.error("Unsubscription from server failed:",s,i),{error:!0,message:s,details:i}}return console.log("Unsubscription successful on server:",i),i}catch(t){return console.error("Error unsubscribing from notifications on server:",t),{error:!0,message:t.message||"Network error or invalid JSON response during unsubscription."}}}}class M{constructor(){this.container=document.getElementById("card-list"),this.textCerita=document.querySelector(".text-cerita"),this.form=document.querySelector(".add-form"),this.textKonfirmasi=document.querySelector(".text-konfirmasi"),this.videoElement=document.querySelector("#video"),this.canvas=document.querySelector("#canvas"),this.photoElement=document.querySelector("#photo"),this.stopCameraButton=document.getElementById("stop-camera-btn")}async displayStories(e,o=new Set){if(!this.container){console.error("Card list container (card-list) not found");return}if(this.container.innerHTML="",!(!e||e.length===0))for(const t of e){const i=parseFloat(t.lat),s=parseFloat(t.lon),n=!isNaN(i)&&!isNaN(s)&&t.lat!==null&&t.lon!==null,a=document.createElement("div");a.classList.add("card");const m=`map-${t.id}`,h=await B(t.id);a.innerHTML=`
        <img src="${t.photoUrl||"./assets/placeholder-image.png"}" alt="Foto Cerita: ${t.name}" class="story-pict" onerror="this.onerror=null;this.src='./assets/placeholder-image.png';">
        <div><strong>${t.name||"Tanpa Nama"}</strong></div>
        <div>${t.description||"Tanpa Deskripsi"}</div>
        <div><label>Lat :</label>${n?i.toFixed(5):"N/A"}</div>
        <div><label>Lon :</label>${n?s.toFixed(5):"N/A"}</div>
        <div><strong>Created At:</strong> ${new Date(t.createdAt).toLocaleString()}</div>
        <div class="map-container" id="${m}" style="height: 200px; width: 100%; background-color: #f0f0f0;">
          ${n?"":'<p style="text-align:center; color:grey; padding-top:20px;">Data lokasi tidak tersedia.</p>'}
        </div>
        <button class="save-story-btn" data-story-id="${t.id}">
          ${h?"Hapus dari Offline 🗑️":"Simpan Cerita "}
        </button>
      `,this.container.appendChild(a);const l=a.querySelector(".save-story-btn");l&&l.addEventListener("click",async u=>{const p=u.target.getAttribute("data-story-id"),S=e.find(y=>y.id===p);if(S){const y=await B(p);await O(S,!y),u.target.textContent=y?"Simpan Offline 💾":"Hapus dari Offline 🗑️",alert(`Cerita "${S.name}" telah ${y?"dihapus dari":"disimpan"} mode offline.`)}}),n&&setTimeout(()=>{try{const u=document.getElementById(m);if(u&&u.offsetHeight>0){const p=L.map(m).setView([i,s],13);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',maxZoom:18,minZoom:3}).addTo(p),L.marker([i,s]).addTo(p).bindPopup(`<b>${t.name||"Story Location"}</b><br>${t.description||""}`).openPopup()}else u&&(u.innerHTML='<p style="text-align:center; color:grey; padding-top:20px;">Gagal memuat peta (elemen tidak siap).</p>')}catch(u){console.error(`Error saat menginisialisasi peta untuk cerita ID ${t.id}:`,u);const p=document.getElementById(m);p&&(p.innerHTML='<p style="text-align:center; color:grey; padding-top:20px;">Terjadi kesalahan saat memuat peta.</p>')}},0)}}showLoginPrompt(){this.textCerita&&(this.textCerita.style.display="block")}hideLoginPrompt(){this.textCerita&&(this.textCerita.style.display="none")}showConfirmation(){this.textKonfirmasi&&(this.textKonfirmasi.style.display="block")}hideConfirmation(){this.textKonfirmasi&&(this.textKonfirmasi.style.display="none")}async getCameraStream(){if(!this.videoElement)return console.error("Elemen video (#video) tidak ditemukan di DOM."),this.showErrorMessage("Tidak dapat memulai kamera: elemen video tidak ada."),null;if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return this.showErrorMessage("Fitur kamera tidak didukung di browser ini."),console.error("getUserMedia not supported on this browser!"),null;try{return await navigator.mediaDevices.getUserMedia({video:!0,audio:!1})}catch(e){return console.error("Error accessing camera (View):",e.name,e.message),e.name==="NotAllowedError"||e.name==="PermissionDeniedError"?this.showErrorMessage("Akses ke kamera ditolak. Periksa izin browser Anda."):e.name==="NotFoundError"||e.name==="DevicesNotFoundError"?this.showErrorMessage("Tidak ada kamera yang ditemukan di perangkat Anda."):this.showErrorMessage("Gagal mengakses webcam: "+e.message),null}}displayVideoStream(e){const o=document.getElementById("captureButton");this.videoElement&&e?(this.videoElement.srcObject=e,this.videoElement.style.display="block",this.videoElement.play().catch(t=>console.error("Error playing video stream:",t)),this.photoElement&&(this.photoElement.style.display="none",this.photoElement.src=""),o&&(o.style.display="inline-block"),this.stopCameraButton&&(this.stopCameraButton.style.display="inline-block")):this.videoElement&&(this.videoElement.srcObject=null,this.videoElement.style.display="none",this.stopCameraButton&&(this.stopCameraButton.style.display="none"))}stopStream(e){e&&e.getTracks().forEach(o=>o.stop()),document.getElementById("captureButton"),this.videoElement&&(this.videoElement.srcObject=null,this.videoElement.style.display="none"),this.stopCameraButton&&(this.stopCameraButton.style.display="none")}displayCapturedPhoto(e){this.photoElement&&(e?(this.photoElement.src=e,this.photoElement.style.display="block",this.videoElement&&(this.videoElement.style.display="none")):(this.photoElement.src="",this.photoElement.style.display="none"))}getFormValues(){const e=document.querySelector("#isi-pesan"),o=document.querySelector("#latitude"),t=document.querySelector("#longitude");return{description:e?e.value:"",latitude:o?o.value:"",longitude:t?t.value:"",photo:this.photoElement?this.photoElement.src:""}}onSubmit(e){this.form?this.form.addEventListener("submit",o=>{o.preventDefault(),e()}):console.warn("Form element (.add-form) not found for onSubmit binding.")}showErrorMessage(e){console.error("Error Displayed to User:",e),alert(e)}clearForm(){this.form&&this.form.reset(),this.displayCapturedPhoto(null);const e=document.querySelector("#latitude"),o=document.querySelector("#longitude");e&&(e.value=""),o&&(o.value="")}}class T{constructor(e,o){this.view=e,this.model=o,this.activeStream=null,this.capturedPhotoDataUrl=null}async loadStories(){if(this.model.hasActiveSession()){this.view.hideLoginPrompt();try{const e=await this.model.getStories();e&&e.listStory&&!e.error?e.listStory.length===0&&e.message&&e.message.includes("Offline and no local data")?(this.view.showErrorMessage("Anda offline dan tidak ada data cerita lokal yang tersimpan."),this.view.displayStories([])):(this.view.displayStories(e.listStory),e.message&&e.message.includes("local DB")&&console.log("Menampilkan cerita dari penyimpanan lokal.")):(console.error("Error loading stories (Presenter):",e.message||"Unknown error from StoryModel.getStories"),e.message&&e.message.toLowerCase().includes("token not found")?this.view.showLoginPrompt():e.message&&e.message.includes("Offline and no local data")?(this.view.showErrorMessage("Anda offline dan tidak ada data cerita lokal yang tersimpan."),this.view.displayStories([])):(this.view.showErrorMessage(e.message||"Gagal memuat cerita."),this.view.displayStories([])))}catch(e){console.error("Failed to orchestrate fetching stories (Presenter):",e),this.view.showErrorMessage("Gagal memuat cerita: "+e.message),this.view.displayStories([])}}else this.view.showLoginPrompt(),this.view.displayStories([]),navigator.onLine||console.log("Offline, mencoba memuat cerita untuk pengguna tamu dari model...")}async submitStoryForm(){this.view.onSubmit(async()=>{const{description:e,latitude:o,longitude:t}=this.view.getFormValues(),i=this.capturedPhotoDataUrl;if(!this.model.hasActiveSession()){this.view.showErrorMessage("Unauthorized, please login first.");return}if(!navigator.onLine){this.view.showErrorMessage("Anda sedang offline. Cerita tidak dapat dikirim sekarang.");return}if(!i||!e){this.view.showErrorMessage("Please capture a photo and provide a description for the story.");return}this.view.showConfirmation();try{const s=this.dataURLtoBlob(i);if(s.size>1*1024*1024){this.view.showErrorMessage("Photo file size exceeds 1MB. Please choose a smaller image or capture a new one."),this.view.hideConfirmation();return}const n=new FormData;n.append("description",e),n.append("photo",s,"story-photo.png"),o&&t&&(n.append("lat",parseFloat(o)),n.append("lon",parseFloat(t)));const a=await this.model.addStory(n);a&&!a.error?(alert(`Story created successfully! ${a.message||""}`),console.log("Story submitted, server response:",a),navigator.serviceWorker&&navigator.serviceWorker.controller&&(navigator.serviceWorker.controller.postMessage({action:"clearApiCache",urlToDelete:"https://story-api.dicoding.dev/v1/stories"}),console.log("Pesan untuk clear API cache (stories) dikirim ke Service Worker.")),this.activeStream&&(this.view.stopStream(this.activeStream),this.activeStream=null),this.capturedPhotoDataUrl=null,this.view.clearForm(),setTimeout(()=>{window.location.hash="#/"},1e3)):(this.view.showErrorMessage(`Error submitting story: ${a.message||"Unknown server error."}`),console.error("Error submitting story to server:",a))}catch(s){console.error("Critical error during story submission:",s),this.view.showErrorMessage(`Submission failed: ${s.message}`)}finally{this.view.hideConfirmation()}})}async startVideoStream(){if(this.activeStream&&(this.view.stopStream(this.activeStream),this.activeStream=null),!this.view.videoElement||!this.view.canvas)return console.error("Video or Canvas element not found in the view. Camera cannot start."),this.view.showErrorMessage("Camera elements not found. Cannot start video stream."),null;this.view.videoElement.addEventListener("loadedmetadata",()=>{this.view.canvas&&(this.view.canvas.width=this.view.videoElement.videoWidth,this.view.canvas.height=this.view.videoElement.videoHeight)},{once:!0});try{const e=await this.view.getCameraStream();if(e){this.activeStream=e,this.view.displayVideoStream(this.activeStream);const o=document.getElementById("captureButton");o&&(o.textContent="Capture Photo")}else console.warn("Camera stream was not obtained (Presenter).");return e}catch(e){return console.error("Error starting video stream (Presenter):",e),this.view.showErrorMessage(`Error starting camera: ${e.message}. Please check permissions.`),null}}capturePhoto(){if(!this.activeStream||!this.view.videoElement||!this.view.canvas){console.error("Camera stream or required elements not active/available for capture."),this.view.showErrorMessage("Camera not ready. Start the camera first.");return}if(this.view.videoElement.paused||this.view.videoElement.ended||this.view.videoElement.videoWidth===0){console.error("Video stream not actively playing or dimensions unavailable."),this.view.showErrorMessage("Camera stream is not ready. Please wait or restart camera.");return}const e=800,o=.7,t=this.view.videoElement.videoWidth,i=this.view.videoElement.videoHeight,s=t/i;let n=t,a=i;n>e&&(n=e,a=n/s),this.view.canvas.width=n,this.view.canvas.height=a,this.view.canvas.getContext("2d").drawImage(this.view.videoElement,0,0,n,a);const h=this.view.canvas.toDataURL("image/jpeg",o);this.capturedPhotoDataUrl=h,this.view.displayCapturedPhoto(h),this.view.displayVideoStream(null),this.view.stopCameraButton&&(this.view.stopCameraButton.style.display="none");const l=document.getElementById("captureButton");l&&(l.textContent="Retake Photo (Start Camera)")}dataURLtoBlob(e){const o=e.split(",");if(o.length!==2)throw new Error("Invalid dataURL format for blob conversion.");const[t,i]=o,s=t.match(/:(.*?);/);if(!s||s.length<2)throw new Error("Invalid dataURL format: MIME type not found.");const n=s[1];let a;try{a=atob(i)}catch(l){throw console.error("Error decoding base64 string (atob failed):",l),new Error("Invalid base64 data in dataURL.")}const m=a.length,h=new Uint8Array(m);for(let l=0;l<m;l++)h[l]=a.charCodeAt(l);return new Blob([h],{type:n})}handleStopCameraButtonClick(){console.log("Presenter: 'Tutup Kamera' (Stop Camera) button clicked."),this.activeStream&&(this.view.stopStream(this.activeStream),this.activeStream=null,console.log("Camera stream stopped by user button."));const e=document.getElementById("captureButton");e&&(e.textContent="Start Camera & Capture")}}const $="BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk";let f=null,d=!1;function R(r){const e="=".repeat((4-r.length%4)%4),o=(r+e).replace(/-/g,"+").replace(/_/g,"/"),t=window.atob(o),i=new Uint8Array(t.length);for(let s=0;s<t.length;++s)i[s]=t.charCodeAt(s);return i}function I(){if(!f){console.warn("Service Worker not registered, cannot initialize Push UI.");return}f.pushManager.getSubscription().then(r=>{d=r!==null,k(),console.log(d?"User IS subscribed to push notifications.":"User is NOT subscribed to push notifications.")}).catch(r=>{console.error("Error during getSubscription():",r)})}function k(){const r=document.getElementById("subscribePushBtn");if(r){if(Notification.permission==="denied"){r.textContent="Push Notifications Blocked",r.disabled=!0,d=!1;return}d?r.textContent="Unsubscribe Notifications":r.textContent="Subscribe to Notifications",r.disabled=!g.hasActiveSession(),g.hasActiveSession()?r.title="":r.title="Login to subscribe"}}async function V(){if(!g.hasActiveSession()){alert("Please log in to manage push notification subscriptions.");return}if(!f){alert("Service worker not ready. Please try again in a moment.");return}const r=document.getElementById("subscribePushBtn");r.disabled=!0,d?await H():await j(),r.disabled=!1,k()}async function j(){if(Notification.permission==="denied"){alert("Notification permission has been denied. Please enable it in your browser settings.");return}if(Notification.permission==="default"&&await Notification.requestPermission()!=="granted"){alert("Notification permission was not granted.");return}try{const r=R($),e=await f.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:r});console.log("User subscribed to Push Manager:",e.toJSON());const o=await g.subscribeToNotifications(e);o&&!o.error?(console.log("Successfully subscribed on server:",o),d=!0,alert("Successfully subscribed to notifications!")):(console.error("Failed to subscribe on server:",o.message,o.details),alert(`Failed to subscribe on server: ${o.message}`),e&&(await e.unsubscribe(),console.log("Unsubscribed from Push Manager due to server error.")),d=!1)}catch(r){console.error("Failed to subscribe user to push:",r),alert(`Subscription failed: ${r.message}. Check console for details.`),r.name==="NotAllowedError"&&alert("Notification permission was denied or dismissed."),d=!1}}async function H(){try{const r=await f.pushManager.getSubscription();if(r){const e=await g.unsubscribeFromNotifications(r.endpoint);e&&!e.error?(await r.unsubscribe(),console.log("User unsubscribed from Push Manager and server."),d=!1,alert("Successfully unsubscribed from notifications.")):(console.error("Failed to unsubscribe on server:",e.message,e.details),alert(`Failed to unsubscribe on server: ${e.message}. You might still be subscribed locally.`))}else console.log("No active push subscription found to unsubscribe."),d=!1}catch(r){console.error("Failed to unsubscribe user from push:",r),alert(`Unsubscription failed: ${r.message}`)}}function D(){const r=location.hash||"#/",e=document.getElementById("subscribePushBtnGlobal");e&&(e.style.display="none"),r==="#/login"?W():r==="#/register"?K():r==="#/"?z():r==="#/form"&&(G(),setTimeout(J,100))}function z(){document.startViewTransition(()=>{const r=document.getElementById("app"),e=document.getElementById("login-section");localStorage.getItem("token")?e.style.display="none":e.style.display="flex",r.innerHTML=`
      <section class="article-text">
        <button type="submit" class="skip-button" onclick="window.location='#/form';">Add Story</button>
        <button type="button" class="skip-button" id="subscribePushBtn">Subscribe to Notifications</button>
      <button type="button" class="skip-button" id="show-offline-btn">Tampilkan Cerita Offline</button>
        </section>
      <section class="list-story">
        <label>Story List</label>
      </section>
      <div class="text-cerita" style="display: none;">
        Harap Login Untuk Melihat List Cerita . . .
      </div>
      <div class="card-wrap">
        <section class="card-story">
          <div class="card-list" id="card-list"></div>
        </section>
      </div>
    `;const t=new M;new T(t,g).loadStories();const s=document.getElementById("subscribePushBtn");s&&(s.addEventListener("click",V),k());const n=document.getElementById("show-offline-btn");n&&n.addEventListener("click",async()=>{console.log("Tombol tampilkan offline diklik!"),alert("Memuat cerita dari penyimpanan offline...");const a=await g.getOfflineStories();a&&a.length>0?(t.displayStories(a),console.log(`Berhasil memuat ${a.length} cerita dari penyimpanan offline.`)):(t.showErrorMessage("Tidak ada cerita yang ditemukan di penyimpanan offline."),t.displayStories([]))}),f&&I()})}function W(){document.startViewTransition(()=>{const r=document.getElementById("app");r.innerHTML=`
      <section class="container-form">
        <div class="login-form">
          <form class="login-input-form">
            <div class="input-form">
              <div><label for="email">Email</label></div>
              <div><input type="text" id="email" /></div>
              <div><label for="password">Password</label></div>
              <div><input type="password" id="password" /></div>
              <button aria-label="Login Button" type="submit" class="login-button">Login</button>
              <p class="text-konfirmasi" style="display: none;">
                Harap bersabar ini ujian . . .
              </p>
            </div>
          </form>
        </div>
      </section>
    `;const e=new x;new C(e,P)})}function K(){document.startViewTransition(()=>{const r=document.getElementById("app");r.innerHTML=`
      <section class="container-form">
        <div class="login-form">
          <form class="register-input-form">
            <div class="input-form">
              <div><label for="name">Name</label></div>
              <div><input type="text" id="name" /></div>
              <div><label for="email">Email</label></div>
              <div><input type="text" id="email" /></div>
              <div><label for="password">Password</label></div>
              <div><input type="password" id="password" /></div>
              <button aria-label="Register Account" type="submit" class="register-button">Register</button>
              <p class="notif-regis" style="display: none;">
                Akun sedang dibuat, harap berharap . . .
              </p>
            </div>
          </form>
        </div>
      </section>
    `;const e=new x;new C(e,P)})}function G(){document.startViewTransition(()=>{const r=document.getElementById("app");r.innerHTML=`
      <section class="container-form">
        <div class="login-form">
          <form class="add-form">
            <div class="input-form">
              <label for="isi-pesan">Deskripsi Cerita</label>
              <textarea id="isi-pesan" cols="50" rows="10"></textarea>
            </div>
            <div class="input-form">
                <video id="video" style="display: none; width: 100%; max-width: 400px; height: auto; border: 1px solid grey; margin-bottom: 10px;"></video>
                <canvas id="canvas" style="display: none;"></canvas>
            </div>
            <div class="input-form">
              <label for="captureButton">Take/Upload Photo</label> <br/>
              <button type="button" id="captureButton">Start Camera & Capture</button>
              <button type="button" id="stop-camera-btn" style="display: none;">Tutup Kamera</button>
              <br/>
              <img id="photo" style="display: none; max-width: 100%; height: auto; margin-top: 10px;" alt="Captured Photo" />
            </div>

            <div class="input-form">
              <label for="map">Pilih Lokasi (Click on map)</label>
            </div>
            <div id="map" style="height: 300px; width: 100%; margin-bottom: 10px;"></div>
            <input type="hidden" id="latitude" name="latitude" />
            <input type="hidden" id="longitude" name="longitude" />

            <button aria-label="Submit Cerita" type="submit" class="login-button">Submit Story</button>
            <p class="text-konfirmasi" style="display: none;">
              Gula gula apa yang hijau? gula gula ninja
            </p>
          </form>
        </div>
      </section>
    `;const e=new M,o=new T(e,g);o.startVideoStream(),document.querySelector("#captureButton").addEventListener("click",()=>{!o.activeStream&&e.videoElement.style.display==="none"?o.startVideoStream().then(()=>{document.querySelector("#captureButton").textContent="Capture Photo"}):o.activeStream?o.capturePhoto():(o.startVideoStream(),document.querySelector("#captureButton").textContent="Capture Photo")}),document.querySelector("#stop-camera-btn").addEventListener("click",()=>{o.handleStopCameraButtonClick(),document.querySelector("#captureButton").textContent="Start Camera & Capture"}),o.submitStoryForm()})}let v,E=!1;function J(){if(!document.getElementById("map")||typeof L>"u"){console.warn("Map element not found or Leaflet (L) not loaded. Map cannot be initialized.");return}window.storyAppMap&&(window.storyAppMap.remove(),window.storyAppMap=null),E=!1,v=null;let e=0,o=0,t=2;navigator.geolocation?navigator.geolocation.getCurrentPosition(i=>{e=i.coords.latitude,o=i.coords.longitude,t=13,window.storyAppMap&&window.storyAppMap.setView([e,o],t),!E&&document.getElementById("latitude")&&(document.getElementById("latitude").value=e,document.getElementById("longitude").value=o)},()=>{console.warn("Geolocation failed or was denied. Using default map center."),window.storyAppMap&&window.storyAppMap.setView([e,o],t)}):console.warn("Geolocation not supported by this browser. Using default map center."),window.storyAppMap=L.map("map").setView([e,o],t),L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(window.storyAppMap),window.storyAppMap.on("click",function(i){const s=i.latlng.lat.toFixed(6),n=i.latlng.lng.toFixed(6);v?v.setLatLng([s,n]):v=L.marker([s,n]).addTo(window.storyAppMap),v.bindPopup("Selected Location:<br>Lat: "+s+"<br>Lon: "+n).openPopup(),E=!0,document.getElementById("latitude").value=s,document.getElementById("longitude").value=n})}window.addEventListener("load",()=>{D(),"serviceWorker"in navigator?navigator.serviceWorker.register("./service-worker.js").then(r=>{console.log("Service Worker registered successfully with scope:",r.scope),f=r,"PushManager"in window?I():console.warn("Push messaging is not supported.")}).catch(r=>{console.error("Service Worker registration failed:",r)}):console.warn("Service Worker not supported in this browser.")});window.addEventListener("hashchange",D);
